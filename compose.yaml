# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  coredns:
    image: coredns/coredns
    container_name: 'dns.inabox.ies-sabadell.cat'
    restart: always
    expose:
      - '53'
      - '53/udp'
    ports:
      - '53:53'
      - '53:53/udp'
    volumes:
      - './coredns:/etc/coredns'
    command: -conf /etc/coredns/Corefile

  proxy:
    image: nginxproxy/nginx-proxy
    container_name: 'proxy.inabox.ies-sabadell.cat'
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs 
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    ports:
      - '80:80'
      - '443:443'

  proxy-acme:
    image: nginxproxy/acme-companion
    container_name: 'proxy-acme.inabox.ies-sabadell.cat'
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs 
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    environment:
      - "DEFAULT_EMAIL=inabox@ies-sabadell.cat"
      - NGINX_PROXY_CONTAINER=proxy.inabox.ies-sabadell.cat
    depends_on:
      proxy:
        condition: service_started

  ldap:
    image: osixia/openldap:1.5.0
    container_name: 'ldap.inabox.ies-sabadell.cat'
    restart: always
    environment:
      - LDAP_ORGANISATION=inabox
      - LDAP_DOMAIN=inabox.ies-sabadell.cat
      - "LDAP_BASE_DN=dc=inabox,dc=ies-sabadell,dc=cat"
      - LDAP_ADMIN_PASSWORD=inabox
    ports:
      - 389:389
      - 636:636

  lam:
    image: ghcr.io/ldapaccountmanager/lam:stable
    container_name: 'lam.inabox.ies-sabadell.cat'
    restart: always
    environment:
      - LDAP_DOMAIN=inabox.ies-sabadell.cat
      - "LDAP_BASE_DN=dc=inabox,dc=ies-sabadell,dc=cat"
      - LAM_PASSWORD=inabox
      - LDAP_ORGANISATION='Inabox Institut Sabadell'
      - LDAP_ADMIN_PASSWORD=inabox
      - LDAP_READONLY_PASSWORD=inabox
      - VIRTUAL_HOST=lam.inabox.ies-sabadell.cat
      - LETSENCRYPT_HOST=lam.inabox.ies-sabadell.cat
    expose:
      - '80'
    depends_on:
      ldap:
        condition: service_started
      proxy:
        condition: service_started

  postgres:
    image: postgres
    container_name: 'postgres.inabox.ies-sabadell.cat'
    restart: always
    secrets:
      - db-password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - inabox-db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
       test: [ "CMD", "pg_isready" ]
       interval: 10s
       timeout: 5s
       retries: 5

  adminer:
    image: adminer
    container_name: 'adminer.inabox.ies-sabadell.cat'
    restart: always
    environment:
      - VIRTUAL_HOST=adminer.inabox.ies-sabadell.cat
      - LETSENCRYPT_HOST=adminer.inabox.ies-sabadell.cat      
    expose:
      - '8080'
    depends_on:
      postgres:
        condition: service_healthy
      proxy:
        condition: service_started

  rabbitmq:
    image: rabbitmq
    container_name: 'rabbitmq.inabox.ies-sabadell.cat'
    ports:
      - '5672:5672'

  redis:
    image: redis:5
    container_name: 'redis.inabox.ies-sabadell.cat'
    restart: always
    ports:
      - '6379:6379'

  guacd:
    image: guacamole/guacd
    container_name: 'guacd.inabox.ies-sabadell.cat'
    restart: always
    environment:
      - GUACD_LOG_LEVEL=debug
    ports:
      - '4822:4822'

  guacamole:
    image: guacamole/guacamole
    container_name: 'guacamole.inabox.ies-sabadell.cat'
    restart: always
    environment:
      - POSTGRESQL_HOSTNAME=postgres
      - POSTGRESQL_DATABASE=guacamole_db
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=development
      - POSTGRESQL_PORT=5432
      - GUACD_HOSTNAME=guacd
      - GUACD_PORT=4822
      - VIRTUAL_HOST=guacamole.inabox.ies-sabadell.cat
      - LETSENCRYPT_HOST=guacamole.inabox.ies-sabadell.cat
    expose:
      - '8080'
    depends_on:
      postgres:
        condition: service_healthy
      proxy:
        condition: service_started

  inabox:
    container_name: 'www.inabox.ies-sabadell.cat'
    build:
      context: .
    secrets:
      - django-secret-key
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY_FILE=/run/secrets/django-secret-key
      - VIRTUAL_HOST=www.inabox.ies-sabadell.cat
      - LETSENCRYPT_HOST=www.inabox.ies-sabadell.cat
    expose:
      - '8000'
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
      coredns:
        condition: service_started
      ldap:
        condition: service_started
      proxy:
        condition: service_started
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started

volumes:
  inabox-db:
  acme:
  certs: 
  vhost:
  html:

secrets:
  db-password:
    file: db-password.txt
  django-secret-key:
    file: django-secret-key.txt

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

